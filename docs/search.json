[
  {
    "objectID": "Base R Programming Homework.html",
    "href": "Base R Programming Homework.html",
    "title": "Base R Programming",
    "section": "",
    "text": "Create a vector of pre-treatment values for subjects 1-20.\n\npre_bp &lt;- c(130,128,116,124,133,134,118,126,114,127,141,138,128,140,137,131,120,128,139,135)\n\nCreate a vector of post-treatment values for subjects 1-20.\n\npost_bp &lt;- c(114,98,113,99,107,116,113,111,119,117,101,119,130,122,106,106,124,102,117,113)\n\nAssign names to vector elements. I am using the paste feature to join together subject and their number separated by the _ \n\npatient &lt;- paste(\"Subject\", 1:20, sep=\"_\")\nnames(pre_bp) &lt;- patient\nnames(post_bp) &lt;- patient\n\nCalculate the change in blood pressure for each patient by doing pre-treatment - post-treatment. Here I created a new vector called diff_bp to represent the difference.\n\ndiff_bp &lt;- pre_bp - post_bp\n\nCalculate the average decrease in blood pressure across all patients.\n\nmean(diff_bp)\n\n[1] 17\n\n\nDetermine which patients experienced a decrease in blood pressure after treatment using which() function.\n\nwhich(diff_bp &gt; 0)\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n         1          2          3          4          5          6          7 \n Subject_8 Subject_10 Subject_11 Subject_12 Subject_14 Subject_15 Subject_16 \n         8         10         11         12         14         15         16 \nSubject_18 Subject_19 Subject_20 \n        18         19         20 \n\n\nSubset the vector of differences to only return those that have a positive change. I then printed it to check that it is subsetting correctly.\n\npositive_change &lt;- diff_bp[which(diff_bp &gt; 0)]\npositive_change\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n        16         30          3         25         26         18          5 \n Subject_8 Subject_10 Subject_11 Subject_12 Subject_14 Subject_15 Subject_16 \n        15         10         40         19         18         31         25 \nSubject_18 Subject_19 Subject_20 \n        26         22         22 \n\n\nCalculate the average decrease in blood pressure for those where the blood pressure decreased.\n\nmean(positive_change)\n\n[1] 20.64706\n\n\n\n\n\nCreate a data frame object with the data above. Print to check that it is printing correctly. I created a data frame with the pre_bp, post_bp, and diff_bp. There are already subject names through all of these vectors having identical names.\n\nbp_df &lt;- data.frame(pre_bp,\n                    post_bp,\n                    diff_bp)\nbp_df\n\n           pre_bp post_bp diff_bp\nSubject_1     130     114      16\nSubject_2     128      98      30\nSubject_3     116     113       3\nSubject_4     124      99      25\nSubject_5     133     107      26\nSubject_6     134     116      18\nSubject_7     118     113       5\nSubject_8     126     111      15\nSubject_9     114     119      -5\nSubject_10    127     117      10\nSubject_11    141     101      40\nSubject_12    138     119      19\nSubject_13    128     130      -2\nSubject_14    140     122      18\nSubject_15    137     106      31\nSubject_16    131     106      25\nSubject_17    120     124      -4\nSubject_18    128     102      26\nSubject_19    139     117      22\nSubject_20    135     113      22\n\n\nReturn only rows where diff_bp column is negative. I used the subset function on the bp_df to do this.\n\nsubset(bp_df, diff_bp &lt;0)\n\n           pre_bp post_bp diff_bp\nSubject_9     114     119      -5\nSubject_13    128     130      -2\nSubject_17    120     124      -4\n\n\nAdd a new column corresponding to true if the post_bp is less than 120. I created a new vector called low bp which determined if this was true by looking at the post_bp column of the bp_df dataframe being less than 120. Then I added another column to the bp_df using the new vector I created. Then I checked to make sure the column was printing correctly.\n\nlowbp &lt;- bp_df$post_bp &lt; 120\nbp_df$lowbp &lt;- lowbp\nbp_df\n\n           pre_bp post_bp diff_bp lowbp\nSubject_1     130     114      16  TRUE\nSubject_2     128      98      30  TRUE\nSubject_3     116     113       3  TRUE\nSubject_4     124      99      25  TRUE\nSubject_5     133     107      26  TRUE\nSubject_6     134     116      18  TRUE\nSubject_7     118     113       5  TRUE\nSubject_8     126     111      15  TRUE\nSubject_9     114     119      -5  TRUE\nSubject_10    127     117      10  TRUE\nSubject_11    141     101      40  TRUE\nSubject_12    138     119      19  TRUE\nSubject_13    128     130      -2 FALSE\nSubject_14    140     122      18 FALSE\nSubject_15    137     106      31  TRUE\nSubject_16    131     106      25  TRUE\nSubject_17    120     124      -4 FALSE\nSubject_18    128     102      26  TRUE\nSubject_19    139     117      22  TRUE\nSubject_20    135     113      22  TRUE\n\n\nPrint out the dataframe nicely in final document. This is taking the kable function from the knitr package.\n\nknitr::kable(bp_df)\n\n\n\n\n\npre_bp\npost_bp\ndiff_bp\nlowbp\n\n\n\n\nSubject_1\n130\n114\n16\nTRUE\n\n\nSubject_2\n128\n98\n30\nTRUE\n\n\nSubject_3\n116\n113\n3\nTRUE\n\n\nSubject_4\n124\n99\n25\nTRUE\n\n\nSubject_5\n133\n107\n26\nTRUE\n\n\nSubject_6\n134\n116\n18\nTRUE\n\n\nSubject_7\n118\n113\n5\nTRUE\n\n\nSubject_8\n126\n111\n15\nTRUE\n\n\nSubject_9\n114\n119\n-5\nTRUE\n\n\nSubject_10\n127\n117\n10\nTRUE\n\n\nSubject_11\n141\n101\n40\nTRUE\n\n\nSubject_12\n138\n119\n19\nTRUE\n\n\nSubject_13\n128\n130\n-2\nFALSE\n\n\nSubject_14\n140\n122\n18\nFALSE\n\n\nSubject_15\n137\n106\n31\nTRUE\n\n\nSubject_16\n131\n106\n25\nTRUE\n\n\nSubject_17\n120\n124\n-4\nFALSE\n\n\nSubject_18\n128\n102\n26\nTRUE\n\n\nSubject_19\n139\n117\n22\nTRUE\n\n\nSubject_20\n135\n113\n22\nTRUE\n\n\n\n\n\n\n\n\nCreate a new data frame with this data in it from the new subjects. Add the new column as well. I first created vectors for pre-treatment values for the placebo group and post-treatment values for the placebo group. Then I created a vector of the difference by subtracting the post-treatment from the pre-treatment. I assigned them names using the names() function. Finally, I created the data frame with the new vectors that I created.\n\npre_placebo &lt;- c(138,135,147,117,152,134,114,121,131,130)\npost_placebo &lt;- c(105,136,123,130,134,143,135,139,120,124)\npre_placebo\n\n [1] 138 135 147 117 152 134 114 121 131 130\n\npost_placebo\n\n [1] 105 136 123 130 134 143 135 139 120 124\n\nplacebo_diff = pre_placebo - post_placebo\nplacebo_diff\n\n [1]  33  -1  24 -13  18  -9 -21 -18  11   6\n\npatientnames &lt;- paste(\"Placebo Subject\", 1:10, sep=\"_\")\nnames(pre_placebo) &lt;- patientnames\nnames(post_placebo) &lt;- patientnames\n\nplacebo_df &lt;- data.frame(pre_placebo,\n                         post_placebo,\n                         placebo_diff)\nplacebo_df\n\n                   pre_placebo post_placebo placebo_diff\nPlacebo Subject_1          138          105           33\nPlacebo Subject_2          135          136           -1\nPlacebo Subject_3          147          123           24\nPlacebo Subject_4          117          130          -13\nPlacebo Subject_5          152          134           18\nPlacebo Subject_6          134          143           -9\nPlacebo Subject_7          114          135          -21\nPlacebo Subject_8          121          139          -18\nPlacebo Subject_9          131          120           11\nPlacebo Subject_10         130          124            6\n\nless120bp &lt;- placebo_df$post_placebo &lt; 120\n\nplacebo_df$less120bp &lt;- less120bp\nplacebo_df\n\n                   pre_placebo post_placebo placebo_diff less120bp\nPlacebo Subject_1          138          105           33      TRUE\nPlacebo Subject_2          135          136           -1     FALSE\nPlacebo Subject_3          147          123           24     FALSE\nPlacebo Subject_4          117          130          -13     FALSE\nPlacebo Subject_5          152          134           18     FALSE\nPlacebo Subject_6          134          143           -9     FALSE\nPlacebo Subject_7          114          135          -21     FALSE\nPlacebo Subject_8          121          139          -18     FALSE\nPlacebo Subject_9          131          120           11     FALSE\nPlacebo Subject_10         130          124            6     FALSE\n\n\nCreate a list with two elements. I created a new list called df_list (since it is a list of dataframes) that has the bp_df in the first element of the list (that I named treatment) and the placebo_df as the second element of the list (which I named placebo).\n\ndf_list &lt;- list(treatment = bp_df, placebo = placebo_df)\ndf_list\n\n$treatment\n           pre_bp post_bp diff_bp lowbp\nSubject_1     130     114      16  TRUE\nSubject_2     128      98      30  TRUE\nSubject_3     116     113       3  TRUE\nSubject_4     124      99      25  TRUE\nSubject_5     133     107      26  TRUE\nSubject_6     134     116      18  TRUE\nSubject_7     118     113       5  TRUE\nSubject_8     126     111      15  TRUE\nSubject_9     114     119      -5  TRUE\nSubject_10    127     117      10  TRUE\nSubject_11    141     101      40  TRUE\nSubject_12    138     119      19  TRUE\nSubject_13    128     130      -2 FALSE\nSubject_14    140     122      18 FALSE\nSubject_15    137     106      31  TRUE\nSubject_16    131     106      25  TRUE\nSubject_17    120     124      -4 FALSE\nSubject_18    128     102      26  TRUE\nSubject_19    139     117      22  TRUE\nSubject_20    135     113      22  TRUE\n\n$placebo\n                   pre_placebo post_placebo placebo_diff less120bp\nPlacebo Subject_1          138          105           33      TRUE\nPlacebo Subject_2          135          136           -1     FALSE\nPlacebo Subject_3          147          123           24     FALSE\nPlacebo Subject_4          117          130          -13     FALSE\nPlacebo Subject_5          152          134           18     FALSE\nPlacebo Subject_6          134          143           -9     FALSE\nPlacebo Subject_7          114          135          -21     FALSE\nPlacebo Subject_8          121          139          -18     FALSE\nPlacebo Subject_9          131          120           11     FALSE\nPlacebo Subject_10         130          124            6     FALSE\n\n\nAccess the first list element using three different types of syntax. Note: I wasn’t sure if the first two items counted separately even though they return different structures so I accessed it in four ways.\n\ndf_list[1]\n\n$treatment\n           pre_bp post_bp diff_bp lowbp\nSubject_1     130     114      16  TRUE\nSubject_2     128      98      30  TRUE\nSubject_3     116     113       3  TRUE\nSubject_4     124      99      25  TRUE\nSubject_5     133     107      26  TRUE\nSubject_6     134     116      18  TRUE\nSubject_7     118     113       5  TRUE\nSubject_8     126     111      15  TRUE\nSubject_9     114     119      -5  TRUE\nSubject_10    127     117      10  TRUE\nSubject_11    141     101      40  TRUE\nSubject_12    138     119      19  TRUE\nSubject_13    128     130      -2 FALSE\nSubject_14    140     122      18 FALSE\nSubject_15    137     106      31  TRUE\nSubject_16    131     106      25  TRUE\nSubject_17    120     124      -4 FALSE\nSubject_18    128     102      26  TRUE\nSubject_19    139     117      22  TRUE\nSubject_20    135     113      22  TRUE\n\ndf_list[[1]]\n\n           pre_bp post_bp diff_bp lowbp\nSubject_1     130     114      16  TRUE\nSubject_2     128      98      30  TRUE\nSubject_3     116     113       3  TRUE\nSubject_4     124      99      25  TRUE\nSubject_5     133     107      26  TRUE\nSubject_6     134     116      18  TRUE\nSubject_7     118     113       5  TRUE\nSubject_8     126     111      15  TRUE\nSubject_9     114     119      -5  TRUE\nSubject_10    127     117      10  TRUE\nSubject_11    141     101      40  TRUE\nSubject_12    138     119      19  TRUE\nSubject_13    128     130      -2 FALSE\nSubject_14    140     122      18 FALSE\nSubject_15    137     106      31  TRUE\nSubject_16    131     106      25  TRUE\nSubject_17    120     124      -4 FALSE\nSubject_18    128     102      26  TRUE\nSubject_19    139     117      22  TRUE\nSubject_20    135     113      22  TRUE\n\ndf_list[-2]\n\n$treatment\n           pre_bp post_bp diff_bp lowbp\nSubject_1     130     114      16  TRUE\nSubject_2     128      98      30  TRUE\nSubject_3     116     113       3  TRUE\nSubject_4     124      99      25  TRUE\nSubject_5     133     107      26  TRUE\nSubject_6     134     116      18  TRUE\nSubject_7     118     113       5  TRUE\nSubject_8     126     111      15  TRUE\nSubject_9     114     119      -5  TRUE\nSubject_10    127     117      10  TRUE\nSubject_11    141     101      40  TRUE\nSubject_12    138     119      19  TRUE\nSubject_13    128     130      -2 FALSE\nSubject_14    140     122      18 FALSE\nSubject_15    137     106      31  TRUE\nSubject_16    131     106      25  TRUE\nSubject_17    120     124      -4 FALSE\nSubject_18    128     102      26  TRUE\nSubject_19    139     117      22  TRUE\nSubject_20    135     113      22  TRUE\n\ndf_list$treatment\n\n           pre_bp post_bp diff_bp lowbp\nSubject_1     130     114      16  TRUE\nSubject_2     128      98      30  TRUE\nSubject_3     116     113       3  TRUE\nSubject_4     124      99      25  TRUE\nSubject_5     133     107      26  TRUE\nSubject_6     134     116      18  TRUE\nSubject_7     118     113       5  TRUE\nSubject_8     126     111      15  TRUE\nSubject_9     114     119      -5  TRUE\nSubject_10    127     117      10  TRUE\nSubject_11    141     101      40  TRUE\nSubject_12    138     119      19  TRUE\nSubject_13    128     130      -2 FALSE\nSubject_14    140     122      18 FALSE\nSubject_15    137     106      31  TRUE\nSubject_16    131     106      25  TRUE\nSubject_17    120     124      -4 FALSE\nSubject_18    128     102      26  TRUE\nSubject_19    139     117      22  TRUE\nSubject_20    135     113      22  TRUE\n\n\nIn one line, access the placebo data frame, pre_bp column. I used the $ to start at my_list then access the placebo data frame and then the pre_placebo column.\n\ndf_list$placebo$pre_placebo\n\n [1] 138 135 147 117 152 134 114 121 131 130\n\n\n\n\n\nCreate a new column in each data frame called status. Create a for loop and use if/then/else logic to create the status columns values. Then repeat for the placebo data frame. I first used the given code to create the status columns. Then I created a for loop just for the bp_df to iterate 20 times since there are 20 observations. I then assigned the ith element of the status column of the bp_df based on what the post_bp was. If it was less than or equal to 120, I wanted to return optimal. If it was between 120 and 130 I wanted to return borderline. If it was greater than 130, I wanted to return high. I didn’t explicity tell it greater than 130 because if it doesn’t fall in the other two categories then it has to be greater than 130. I then copied and pasted that code for the placebo data frame but I only iterated from 1 to 10 since there were only 10 placebo subjects.\n\nbp_df$status &lt;- character(20)\nplacebo_df$status &lt;- character(10)\n\nfor(i in 1:20){\n  if(bp_df$post_bp[i] &lt;= 120) { \n  bp_df$status[i] &lt;- \"Optimal\"\n} else if (bp_df$post_bp[i] &lt;= 130){\n  bp_df$status[i]&lt;- \"Borderline\"\n} else {\n  bp_df$status[i]&lt;- \"High\"\n}\n}\nbp_df\n\n           pre_bp post_bp diff_bp lowbp     status\nSubject_1     130     114      16  TRUE    Optimal\nSubject_2     128      98      30  TRUE    Optimal\nSubject_3     116     113       3  TRUE    Optimal\nSubject_4     124      99      25  TRUE    Optimal\nSubject_5     133     107      26  TRUE    Optimal\nSubject_6     134     116      18  TRUE    Optimal\nSubject_7     118     113       5  TRUE    Optimal\nSubject_8     126     111      15  TRUE    Optimal\nSubject_9     114     119      -5  TRUE    Optimal\nSubject_10    127     117      10  TRUE    Optimal\nSubject_11    141     101      40  TRUE    Optimal\nSubject_12    138     119      19  TRUE    Optimal\nSubject_13    128     130      -2 FALSE Borderline\nSubject_14    140     122      18 FALSE Borderline\nSubject_15    137     106      31  TRUE    Optimal\nSubject_16    131     106      25  TRUE    Optimal\nSubject_17    120     124      -4 FALSE Borderline\nSubject_18    128     102      26  TRUE    Optimal\nSubject_19    139     117      22  TRUE    Optimal\nSubject_20    135     113      22  TRUE    Optimal\n\n\n\nfor(i in 1:10){\n  if(placebo_df$post_placebo[i] &lt;= 120) { \n  placebo_df$status[i] &lt;- \"Optimal\"\n} else if (placebo_df$post_placebo[i] &lt;= 130){\n  placebo_df$status[i]&lt;- \"Borderline\"\n} else {\n  placebo_df$status[i]&lt;- \"High\"\n}\n}\nplacebo_df\n\n                   pre_placebo post_placebo placebo_diff less120bp     status\nPlacebo Subject_1          138          105           33      TRUE    Optimal\nPlacebo Subject_2          135          136           -1     FALSE       High\nPlacebo Subject_3          147          123           24     FALSE Borderline\nPlacebo Subject_4          117          130          -13     FALSE Borderline\nPlacebo Subject_5          152          134           18     FALSE       High\nPlacebo Subject_6          134          143           -9     FALSE       High\nPlacebo Subject_7          114          135          -21     FALSE       High\nPlacebo Subject_8          121          139          -18     FALSE       High\nPlacebo Subject_9          131          120           11     FALSE    Optimal\nPlacebo Subject_10         130          124            6     FALSE Borderline\n\n\n\n\n\nI wrote a function called get_summary_stats that takes in a list and can compute summary statistics on numeric columns of two dataframes within a list and return them as a list of six with meaningful names. I set the default to mean by using stat=\"mean\". I first made empty lists to store the results called treatment_list and placebo_list. I opted to make two lists and then combine them as one list at the end to make it easier to generate names for the next step. I used the my_fun=get(stat) provided to get the input given by the user. Then I focused just on the treatment df which corresponds to the first dataframe. Because I was only focusing on the treatment df at first, I kept the first bracket of input_list as 1 since I was always looking at the first dataframe in the list. Then I only wanted columns 1-3 of that dataframe because those are the numeric ones. Then I applied the function generated by the my_fun=get(stat) and stored each result as the ith element in the treatment_list that I had created. I did the exact same thing with the placebo df, but changing the first input of the list to 2 since I was focusing on the second dataframe. To create the names, I created them separately for the treatment and placebo lists so that I could keep that element constant. I created a vector called treatment_names that has three elements in it. I used the paste feature to paste together “pre”, “post” and “diff” with “treatment” since these all came from the first dataframe. Then, I added the stat that would be taken from user input and specified the space with the sep argument. I then assigned the names using the names() function and then I repeated the same thing with getting the names of the placebo list. I then combined the lists together because the question asked to return a single list with six elements and I originally had two lists of three elements.\n\nget_summary_stats &lt;- function(input_list, stat=\"mean\") {\n  treatment_list &lt;- list()\n  placebo_list &lt;- list()\n  my_fun &lt;- get(stat)\n  \n  for(i in seq_along(input_list[[1]][1:3])) {\n    treatment_list[[i]] &lt;- my_fun(input_list[[1]][[i]])\n  }\n  for(i in seq_along(input_list[[2]][1:3])) {\n    placebo_list[[i]] &lt;- my_fun(input_list[[2]][[i]]) \n  }\n  treatment_names &lt;-  c(paste(\"pre\", \"treatment\", stat, sep = \" \"),\n  paste(\"post\", \"treatment\", stat, sep = \" \"),\n  paste(\"diff\", \"treatment\", stat, sep = \" \"))\n  \n names(treatment_list) &lt;- treatment_names\n \n placebo_names &lt;-  c(paste(\"pre\", \"placebo\", stat, sep = \" \"),\n  paste(\"post\", \"placebo\", stat, sep = \" \"),\n  paste(\"diff\", \"placebo\", stat, sep = \" \"))\n \n names(placebo_list) &lt;- placebo_names\n   \n combo_list &lt;- c(treatment_list,placebo_list)\n return(combo_list)\n}\n\nI then tried out the function without a default which used the mean and then by specifying other statistics to use.\n\nget_summary_stats(df_list)\n\n$`pre treatment mean`\n[1] 129.35\n\n$`post treatment mean`\n[1] 112.35\n\n$`diff treatment mean`\n[1] 17\n\n$`pre placebo mean`\n[1] 131.9\n\n$`post placebo mean`\n[1] 128.9\n\n$`diff placebo mean`\n[1] 3\n\nget_summary_stats(df_list, \"var\")\n\n$`pre treatment var`\n[1] 64.55526\n\n$`post treatment var`\n[1] 74.76579\n\n$`diff treatment var`\n[1] 153.6842\n\n$`pre placebo var`\n[1] 149.8778\n\n$`post placebo var`\n[1] 124.9889\n\n$`diff placebo var`\n[1] 341.3333\n\nget_summary_stats(df_list, \"sd\")\n\n$`pre treatment sd`\n[1] 8.034629\n\n$`post treatment sd`\n[1] 8.646721\n\n$`diff treatment sd`\n[1] 12.39694\n\n$`pre placebo sd`\n[1] 12.24246\n\n$`post placebo sd`\n[1] 11.17984\n\n$`diff placebo sd`\n[1] 18.47521\n\nget_summary_stats(df_list, \"min\")\n\n$`pre treatment min`\n[1] 114\n\n$`post treatment min`\n[1] 98\n\n$`diff treatment min`\n[1] -5\n\n$`pre placebo min`\n[1] 114\n\n$`post placebo min`\n[1] 105\n\n$`diff placebo min`\n[1] -21\n\nget_summary_stats(df_list, \"max\")\n\n$`pre treatment max`\n[1] 141\n\n$`post treatment max`\n[1] 130\n\n$`diff treatment max`\n[1] 40\n\n$`pre placebo max`\n[1] 152\n\n$`post placebo max`\n[1] 143\n\n$`diff placebo max`\n[1] 33"
  },
  {
    "objectID": "Base R Programming Homework.html#basic-vector-practice",
    "href": "Base R Programming Homework.html#basic-vector-practice",
    "title": "Base R Programming",
    "section": "",
    "text": "Create a vector of pre-treatment values for subjects 1-20.\n\npre_bp &lt;- c(130,128,116,124,133,134,118,126,114,127,141,138,128,140,137,131,120,128,139,135)\n\nCreate a vector of post-treatment values for subjects 1-20.\n\npost_bp &lt;- c(114,98,113,99,107,116,113,111,119,117,101,119,130,122,106,106,124,102,117,113)\n\nAssign names to vector elements. I am using the paste feature to join together subject and their number separated by the _ \n\npatient &lt;- paste(\"Subject\", 1:20, sep=\"_\")\nnames(pre_bp) &lt;- patient\nnames(post_bp) &lt;- patient\n\nCalculate the change in blood pressure for each patient by doing pre-treatment - post-treatment. Here I created a new vector called diff_bp to represent the difference.\n\ndiff_bp &lt;- pre_bp - post_bp\n\nCalculate the average decrease in blood pressure across all patients.\n\nmean(diff_bp)\n\n[1] 17\n\n\nDetermine which patients experienced a decrease in blood pressure after treatment using which() function.\n\nwhich(diff_bp &gt; 0)\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n         1          2          3          4          5          6          7 \n Subject_8 Subject_10 Subject_11 Subject_12 Subject_14 Subject_15 Subject_16 \n         8         10         11         12         14         15         16 \nSubject_18 Subject_19 Subject_20 \n        18         19         20 \n\n\nSubset the vector of differences to only return those that have a positive change. I then printed it to check that it is subsetting correctly.\n\npositive_change &lt;- diff_bp[which(diff_bp &gt; 0)]\npositive_change\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n        16         30          3         25         26         18          5 \n Subject_8 Subject_10 Subject_11 Subject_12 Subject_14 Subject_15 Subject_16 \n        15         10         40         19         18         31         25 \nSubject_18 Subject_19 Subject_20 \n        26         22         22 \n\n\nCalculate the average decrease in blood pressure for those where the blood pressure decreased.\n\nmean(positive_change)\n\n[1] 20.64706"
  },
  {
    "objectID": "Base R Programming Homework.html#basic-data-frame-practice",
    "href": "Base R Programming Homework.html#basic-data-frame-practice",
    "title": "Base R Programming",
    "section": "",
    "text": "Create a data frame object with the data above. Print to check that it is printing correctly. I created a data frame with the pre_bp, post_bp, and diff_bp. There are already subject names through all of these vectors having identical names.\n\nbp_df &lt;- data.frame(pre_bp,\n                    post_bp,\n                    diff_bp)\nbp_df\n\n           pre_bp post_bp diff_bp\nSubject_1     130     114      16\nSubject_2     128      98      30\nSubject_3     116     113       3\nSubject_4     124      99      25\nSubject_5     133     107      26\nSubject_6     134     116      18\nSubject_7     118     113       5\nSubject_8     126     111      15\nSubject_9     114     119      -5\nSubject_10    127     117      10\nSubject_11    141     101      40\nSubject_12    138     119      19\nSubject_13    128     130      -2\nSubject_14    140     122      18\nSubject_15    137     106      31\nSubject_16    131     106      25\nSubject_17    120     124      -4\nSubject_18    128     102      26\nSubject_19    139     117      22\nSubject_20    135     113      22\n\n\nReturn only rows where diff_bp column is negative. I used the subset function on the bp_df to do this.\n\nsubset(bp_df, diff_bp &lt;0)\n\n           pre_bp post_bp diff_bp\nSubject_9     114     119      -5\nSubject_13    128     130      -2\nSubject_17    120     124      -4\n\n\nAdd a new column corresponding to true if the post_bp is less than 120. I created a new vector called low bp which determined if this was true by looking at the post_bp column of the bp_df dataframe being less than 120. Then I added another column to the bp_df using the new vector I created. Then I checked to make sure the column was printing correctly.\n\nlowbp &lt;- bp_df$post_bp &lt; 120\nbp_df$lowbp &lt;- lowbp\nbp_df\n\n           pre_bp post_bp diff_bp lowbp\nSubject_1     130     114      16  TRUE\nSubject_2     128      98      30  TRUE\nSubject_3     116     113       3  TRUE\nSubject_4     124      99      25  TRUE\nSubject_5     133     107      26  TRUE\nSubject_6     134     116      18  TRUE\nSubject_7     118     113       5  TRUE\nSubject_8     126     111      15  TRUE\nSubject_9     114     119      -5  TRUE\nSubject_10    127     117      10  TRUE\nSubject_11    141     101      40  TRUE\nSubject_12    138     119      19  TRUE\nSubject_13    128     130      -2 FALSE\nSubject_14    140     122      18 FALSE\nSubject_15    137     106      31  TRUE\nSubject_16    131     106      25  TRUE\nSubject_17    120     124      -4 FALSE\nSubject_18    128     102      26  TRUE\nSubject_19    139     117      22  TRUE\nSubject_20    135     113      22  TRUE\n\n\nPrint out the dataframe nicely in final document. This is taking the kable function from the knitr package.\n\nknitr::kable(bp_df)\n\n\n\n\n\npre_bp\npost_bp\ndiff_bp\nlowbp\n\n\n\n\nSubject_1\n130\n114\n16\nTRUE\n\n\nSubject_2\n128\n98\n30\nTRUE\n\n\nSubject_3\n116\n113\n3\nTRUE\n\n\nSubject_4\n124\n99\n25\nTRUE\n\n\nSubject_5\n133\n107\n26\nTRUE\n\n\nSubject_6\n134\n116\n18\nTRUE\n\n\nSubject_7\n118\n113\n5\nTRUE\n\n\nSubject_8\n126\n111\n15\nTRUE\n\n\nSubject_9\n114\n119\n-5\nTRUE\n\n\nSubject_10\n127\n117\n10\nTRUE\n\n\nSubject_11\n141\n101\n40\nTRUE\n\n\nSubject_12\n138\n119\n19\nTRUE\n\n\nSubject_13\n128\n130\n-2\nFALSE\n\n\nSubject_14\n140\n122\n18\nFALSE\n\n\nSubject_15\n137\n106\n31\nTRUE\n\n\nSubject_16\n131\n106\n25\nTRUE\n\n\nSubject_17\n120\n124\n-4\nFALSE\n\n\nSubject_18\n128\n102\n26\nTRUE\n\n\nSubject_19\n139\n117\n22\nTRUE\n\n\nSubject_20\n135\n113\n22\nTRUE"
  },
  {
    "objectID": "Base R Programming Homework.html#list-practice",
    "href": "Base R Programming Homework.html#list-practice",
    "title": "Base R Programming",
    "section": "",
    "text": "Create a new data frame with this data in it from the new subjects. Add the new column as well. I first created vectors for pre-treatment values for the placebo group and post-treatment values for the placebo group. Then I created a vector of the difference by subtracting the post-treatment from the pre-treatment. I assigned them names using the names() function. Finally, I created the data frame with the new vectors that I created.\n\npre_placebo &lt;- c(138,135,147,117,152,134,114,121,131,130)\npost_placebo &lt;- c(105,136,123,130,134,143,135,139,120,124)\npre_placebo\n\n [1] 138 135 147 117 152 134 114 121 131 130\n\npost_placebo\n\n [1] 105 136 123 130 134 143 135 139 120 124\n\nplacebo_diff = pre_placebo - post_placebo\nplacebo_diff\n\n [1]  33  -1  24 -13  18  -9 -21 -18  11   6\n\npatientnames &lt;- paste(\"Placebo Subject\", 1:10, sep=\"_\")\nnames(pre_placebo) &lt;- patientnames\nnames(post_placebo) &lt;- patientnames\n\nplacebo_df &lt;- data.frame(pre_placebo,\n                         post_placebo,\n                         placebo_diff)\nplacebo_df\n\n                   pre_placebo post_placebo placebo_diff\nPlacebo Subject_1          138          105           33\nPlacebo Subject_2          135          136           -1\nPlacebo Subject_3          147          123           24\nPlacebo Subject_4          117          130          -13\nPlacebo Subject_5          152          134           18\nPlacebo Subject_6          134          143           -9\nPlacebo Subject_7          114          135          -21\nPlacebo Subject_8          121          139          -18\nPlacebo Subject_9          131          120           11\nPlacebo Subject_10         130          124            6\n\nless120bp &lt;- placebo_df$post_placebo &lt; 120\n\nplacebo_df$less120bp &lt;- less120bp\nplacebo_df\n\n                   pre_placebo post_placebo placebo_diff less120bp\nPlacebo Subject_1          138          105           33      TRUE\nPlacebo Subject_2          135          136           -1     FALSE\nPlacebo Subject_3          147          123           24     FALSE\nPlacebo Subject_4          117          130          -13     FALSE\nPlacebo Subject_5          152          134           18     FALSE\nPlacebo Subject_6          134          143           -9     FALSE\nPlacebo Subject_7          114          135          -21     FALSE\nPlacebo Subject_8          121          139          -18     FALSE\nPlacebo Subject_9          131          120           11     FALSE\nPlacebo Subject_10         130          124            6     FALSE\n\n\nCreate a list with two elements. I created a new list called df_list (since it is a list of dataframes) that has the bp_df in the first element of the list (that I named treatment) and the placebo_df as the second element of the list (which I named placebo).\n\ndf_list &lt;- list(treatment = bp_df, placebo = placebo_df)\ndf_list\n\n$treatment\n           pre_bp post_bp diff_bp lowbp\nSubject_1     130     114      16  TRUE\nSubject_2     128      98      30  TRUE\nSubject_3     116     113       3  TRUE\nSubject_4     124      99      25  TRUE\nSubject_5     133     107      26  TRUE\nSubject_6     134     116      18  TRUE\nSubject_7     118     113       5  TRUE\nSubject_8     126     111      15  TRUE\nSubject_9     114     119      -5  TRUE\nSubject_10    127     117      10  TRUE\nSubject_11    141     101      40  TRUE\nSubject_12    138     119      19  TRUE\nSubject_13    128     130      -2 FALSE\nSubject_14    140     122      18 FALSE\nSubject_15    137     106      31  TRUE\nSubject_16    131     106      25  TRUE\nSubject_17    120     124      -4 FALSE\nSubject_18    128     102      26  TRUE\nSubject_19    139     117      22  TRUE\nSubject_20    135     113      22  TRUE\n\n$placebo\n                   pre_placebo post_placebo placebo_diff less120bp\nPlacebo Subject_1          138          105           33      TRUE\nPlacebo Subject_2          135          136           -1     FALSE\nPlacebo Subject_3          147          123           24     FALSE\nPlacebo Subject_4          117          130          -13     FALSE\nPlacebo Subject_5          152          134           18     FALSE\nPlacebo Subject_6          134          143           -9     FALSE\nPlacebo Subject_7          114          135          -21     FALSE\nPlacebo Subject_8          121          139          -18     FALSE\nPlacebo Subject_9          131          120           11     FALSE\nPlacebo Subject_10         130          124            6     FALSE\n\n\nAccess the first list element using three different types of syntax. Note: I wasn’t sure if the first two items counted separately even though they return different structures so I accessed it in four ways.\n\ndf_list[1]\n\n$treatment\n           pre_bp post_bp diff_bp lowbp\nSubject_1     130     114      16  TRUE\nSubject_2     128      98      30  TRUE\nSubject_3     116     113       3  TRUE\nSubject_4     124      99      25  TRUE\nSubject_5     133     107      26  TRUE\nSubject_6     134     116      18  TRUE\nSubject_7     118     113       5  TRUE\nSubject_8     126     111      15  TRUE\nSubject_9     114     119      -5  TRUE\nSubject_10    127     117      10  TRUE\nSubject_11    141     101      40  TRUE\nSubject_12    138     119      19  TRUE\nSubject_13    128     130      -2 FALSE\nSubject_14    140     122      18 FALSE\nSubject_15    137     106      31  TRUE\nSubject_16    131     106      25  TRUE\nSubject_17    120     124      -4 FALSE\nSubject_18    128     102      26  TRUE\nSubject_19    139     117      22  TRUE\nSubject_20    135     113      22  TRUE\n\ndf_list[[1]]\n\n           pre_bp post_bp diff_bp lowbp\nSubject_1     130     114      16  TRUE\nSubject_2     128      98      30  TRUE\nSubject_3     116     113       3  TRUE\nSubject_4     124      99      25  TRUE\nSubject_5     133     107      26  TRUE\nSubject_6     134     116      18  TRUE\nSubject_7     118     113       5  TRUE\nSubject_8     126     111      15  TRUE\nSubject_9     114     119      -5  TRUE\nSubject_10    127     117      10  TRUE\nSubject_11    141     101      40  TRUE\nSubject_12    138     119      19  TRUE\nSubject_13    128     130      -2 FALSE\nSubject_14    140     122      18 FALSE\nSubject_15    137     106      31  TRUE\nSubject_16    131     106      25  TRUE\nSubject_17    120     124      -4 FALSE\nSubject_18    128     102      26  TRUE\nSubject_19    139     117      22  TRUE\nSubject_20    135     113      22  TRUE\n\ndf_list[-2]\n\n$treatment\n           pre_bp post_bp diff_bp lowbp\nSubject_1     130     114      16  TRUE\nSubject_2     128      98      30  TRUE\nSubject_3     116     113       3  TRUE\nSubject_4     124      99      25  TRUE\nSubject_5     133     107      26  TRUE\nSubject_6     134     116      18  TRUE\nSubject_7     118     113       5  TRUE\nSubject_8     126     111      15  TRUE\nSubject_9     114     119      -5  TRUE\nSubject_10    127     117      10  TRUE\nSubject_11    141     101      40  TRUE\nSubject_12    138     119      19  TRUE\nSubject_13    128     130      -2 FALSE\nSubject_14    140     122      18 FALSE\nSubject_15    137     106      31  TRUE\nSubject_16    131     106      25  TRUE\nSubject_17    120     124      -4 FALSE\nSubject_18    128     102      26  TRUE\nSubject_19    139     117      22  TRUE\nSubject_20    135     113      22  TRUE\n\ndf_list$treatment\n\n           pre_bp post_bp diff_bp lowbp\nSubject_1     130     114      16  TRUE\nSubject_2     128      98      30  TRUE\nSubject_3     116     113       3  TRUE\nSubject_4     124      99      25  TRUE\nSubject_5     133     107      26  TRUE\nSubject_6     134     116      18  TRUE\nSubject_7     118     113       5  TRUE\nSubject_8     126     111      15  TRUE\nSubject_9     114     119      -5  TRUE\nSubject_10    127     117      10  TRUE\nSubject_11    141     101      40  TRUE\nSubject_12    138     119      19  TRUE\nSubject_13    128     130      -2 FALSE\nSubject_14    140     122      18 FALSE\nSubject_15    137     106      31  TRUE\nSubject_16    131     106      25  TRUE\nSubject_17    120     124      -4 FALSE\nSubject_18    128     102      26  TRUE\nSubject_19    139     117      22  TRUE\nSubject_20    135     113      22  TRUE\n\n\nIn one line, access the placebo data frame, pre_bp column. I used the $ to start at my_list then access the placebo data frame and then the pre_placebo column.\n\ndf_list$placebo$pre_placebo\n\n [1] 138 135 147 117 152 134 114 121 131 130"
  },
  {
    "objectID": "Base R Programming Homework.html#control-flow-practice",
    "href": "Base R Programming Homework.html#control-flow-practice",
    "title": "Base R Programming",
    "section": "",
    "text": "Create a new column in each data frame called status. Create a for loop and use if/then/else logic to create the status columns values. Then repeat for the placebo data frame. I first used the given code to create the status columns. Then I created a for loop just for the bp_df to iterate 20 times since there are 20 observations. I then assigned the ith element of the status column of the bp_df based on what the post_bp was. If it was less than or equal to 120, I wanted to return optimal. If it was between 120 and 130 I wanted to return borderline. If it was greater than 130, I wanted to return high. I didn’t explicity tell it greater than 130 because if it doesn’t fall in the other two categories then it has to be greater than 130. I then copied and pasted that code for the placebo data frame but I only iterated from 1 to 10 since there were only 10 placebo subjects.\n\nbp_df$status &lt;- character(20)\nplacebo_df$status &lt;- character(10)\n\nfor(i in 1:20){\n  if(bp_df$post_bp[i] &lt;= 120) { \n  bp_df$status[i] &lt;- \"Optimal\"\n} else if (bp_df$post_bp[i] &lt;= 130){\n  bp_df$status[i]&lt;- \"Borderline\"\n} else {\n  bp_df$status[i]&lt;- \"High\"\n}\n}\nbp_df\n\n           pre_bp post_bp diff_bp lowbp     status\nSubject_1     130     114      16  TRUE    Optimal\nSubject_2     128      98      30  TRUE    Optimal\nSubject_3     116     113       3  TRUE    Optimal\nSubject_4     124      99      25  TRUE    Optimal\nSubject_5     133     107      26  TRUE    Optimal\nSubject_6     134     116      18  TRUE    Optimal\nSubject_7     118     113       5  TRUE    Optimal\nSubject_8     126     111      15  TRUE    Optimal\nSubject_9     114     119      -5  TRUE    Optimal\nSubject_10    127     117      10  TRUE    Optimal\nSubject_11    141     101      40  TRUE    Optimal\nSubject_12    138     119      19  TRUE    Optimal\nSubject_13    128     130      -2 FALSE Borderline\nSubject_14    140     122      18 FALSE Borderline\nSubject_15    137     106      31  TRUE    Optimal\nSubject_16    131     106      25  TRUE    Optimal\nSubject_17    120     124      -4 FALSE Borderline\nSubject_18    128     102      26  TRUE    Optimal\nSubject_19    139     117      22  TRUE    Optimal\nSubject_20    135     113      22  TRUE    Optimal\n\n\n\nfor(i in 1:10){\n  if(placebo_df$post_placebo[i] &lt;= 120) { \n  placebo_df$status[i] &lt;- \"Optimal\"\n} else if (placebo_df$post_placebo[i] &lt;= 130){\n  placebo_df$status[i]&lt;- \"Borderline\"\n} else {\n  placebo_df$status[i]&lt;- \"High\"\n}\n}\nplacebo_df\n\n                   pre_placebo post_placebo placebo_diff less120bp     status\nPlacebo Subject_1          138          105           33      TRUE    Optimal\nPlacebo Subject_2          135          136           -1     FALSE       High\nPlacebo Subject_3          147          123           24     FALSE Borderline\nPlacebo Subject_4          117          130          -13     FALSE Borderline\nPlacebo Subject_5          152          134           18     FALSE       High\nPlacebo Subject_6          134          143           -9     FALSE       High\nPlacebo Subject_7          114          135          -21     FALSE       High\nPlacebo Subject_8          121          139          -18     FALSE       High\nPlacebo Subject_9          131          120           11     FALSE    Optimal\nPlacebo Subject_10         130          124            6     FALSE Borderline"
  },
  {
    "objectID": "Base R Programming Homework.html#function-writing",
    "href": "Base R Programming Homework.html#function-writing",
    "title": "Base R Programming",
    "section": "",
    "text": "I wrote a function called get_summary_stats that takes in a list and can compute summary statistics on numeric columns of two dataframes within a list and return them as a list of six with meaningful names. I set the default to mean by using stat=\"mean\". I first made empty lists to store the results called treatment_list and placebo_list. I opted to make two lists and then combine them as one list at the end to make it easier to generate names for the next step. I used the my_fun=get(stat) provided to get the input given by the user. Then I focused just on the treatment df which corresponds to the first dataframe. Because I was only focusing on the treatment df at first, I kept the first bracket of input_list as 1 since I was always looking at the first dataframe in the list. Then I only wanted columns 1-3 of that dataframe because those are the numeric ones. Then I applied the function generated by the my_fun=get(stat) and stored each result as the ith element in the treatment_list that I had created. I did the exact same thing with the placebo df, but changing the first input of the list to 2 since I was focusing on the second dataframe. To create the names, I created them separately for the treatment and placebo lists so that I could keep that element constant. I created a vector called treatment_names that has three elements in it. I used the paste feature to paste together “pre”, “post” and “diff” with “treatment” since these all came from the first dataframe. Then, I added the stat that would be taken from user input and specified the space with the sep argument. I then assigned the names using the names() function and then I repeated the same thing with getting the names of the placebo list. I then combined the lists together because the question asked to return a single list with six elements and I originally had two lists of three elements.\n\nget_summary_stats &lt;- function(input_list, stat=\"mean\") {\n  treatment_list &lt;- list()\n  placebo_list &lt;- list()\n  my_fun &lt;- get(stat)\n  \n  for(i in seq_along(input_list[[1]][1:3])) {\n    treatment_list[[i]] &lt;- my_fun(input_list[[1]][[i]])\n  }\n  for(i in seq_along(input_list[[2]][1:3])) {\n    placebo_list[[i]] &lt;- my_fun(input_list[[2]][[i]]) \n  }\n  treatment_names &lt;-  c(paste(\"pre\", \"treatment\", stat, sep = \" \"),\n  paste(\"post\", \"treatment\", stat, sep = \" \"),\n  paste(\"diff\", \"treatment\", stat, sep = \" \"))\n  \n names(treatment_list) &lt;- treatment_names\n \n placebo_names &lt;-  c(paste(\"pre\", \"placebo\", stat, sep = \" \"),\n  paste(\"post\", \"placebo\", stat, sep = \" \"),\n  paste(\"diff\", \"placebo\", stat, sep = \" \"))\n \n names(placebo_list) &lt;- placebo_names\n   \n combo_list &lt;- c(treatment_list,placebo_list)\n return(combo_list)\n}\n\nI then tried out the function without a default which used the mean and then by specifying other statistics to use.\n\nget_summary_stats(df_list)\n\n$`pre treatment mean`\n[1] 129.35\n\n$`post treatment mean`\n[1] 112.35\n\n$`diff treatment mean`\n[1] 17\n\n$`pre placebo mean`\n[1] 131.9\n\n$`post placebo mean`\n[1] 128.9\n\n$`diff placebo mean`\n[1] 3\n\nget_summary_stats(df_list, \"var\")\n\n$`pre treatment var`\n[1] 64.55526\n\n$`post treatment var`\n[1] 74.76579\n\n$`diff treatment var`\n[1] 153.6842\n\n$`pre placebo var`\n[1] 149.8778\n\n$`post placebo var`\n[1] 124.9889\n\n$`diff placebo var`\n[1] 341.3333\n\nget_summary_stats(df_list, \"sd\")\n\n$`pre treatment sd`\n[1] 8.034629\n\n$`post treatment sd`\n[1] 8.646721\n\n$`diff treatment sd`\n[1] 12.39694\n\n$`pre placebo sd`\n[1] 12.24246\n\n$`post placebo sd`\n[1] 11.17984\n\n$`diff placebo sd`\n[1] 18.47521\n\nget_summary_stats(df_list, \"min\")\n\n$`pre treatment min`\n[1] 114\n\n$`post treatment min`\n[1] 98\n\n$`diff treatment min`\n[1] -5\n\n$`pre placebo min`\n[1] 114\n\n$`post placebo min`\n[1] 105\n\n$`diff placebo min`\n[1] -21\n\nget_summary_stats(df_list, \"max\")\n\n$`pre treatment max`\n[1] 141\n\n$`post treatment max`\n[1] 130\n\n$`diff treatment max`\n[1] 40\n\n$`pre placebo max`\n[1] 152\n\n$`post placebo max`\n[1] 143\n\n$`diff placebo max`\n[1] 33"
  }
]